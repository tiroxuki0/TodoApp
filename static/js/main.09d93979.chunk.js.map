{"version":3,"sources":["components/Todo/index.js","components/TodoList/todoListSlice.js","redux/selectors.js","components/TodoList/index.js","components/Filters/filtersSlice.js","components/Filters/index.js","App.js","redux/store.js","index.js"],"names":["priorityColorMapping","High","Medium","Low","Todo","name","priority","completed","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","color","margin","createSlice","initialState","id","reducers","addTodo","state","action","push","payload","toggleTodo","currentTodo","find","todo","todoListRemaining","createSelector","todoList","filters","search","status","priorities","filter","length","includes","TodoList","setTodo","setPriority","dispatch","useDispatch","useSelector","height","span","overflowY","map","Group","display","compact","value","e","target","defaultValue","Option","label","type","onClick","todoItem","uuidv4","todoListSlice","actions","searchFilter","statusFilter","prioritiesFilter","Search","Input","Filters","setStatus","setPriorities","Paragraph","fontWeight","marginTop","placeholder","filtersSlice","handleChangeSearch","sm","handleChangeStatus","mode","allowClear","width","handleChangePriorities","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09d93979.chunk.js","sourcesContent":["import { Row, Tag, Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, priority, completed }) {\r\n  const [checked, setChecked] = useState(completed);\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nexport default createSlice({\r\n  name: \"todoList\",\r\n  initialState: [\r\n    {\r\n      id: 1,\r\n      name: \"Learn Redux\",\r\n      priority: \"Low\",\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Learn React\",\r\n      priority: \"Medium\",\r\n      completed: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Learn NodeJs\",\r\n      priority: \"High\",\r\n      completed: false,\r\n    },\r\n  ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    toggleTodo: (state, action) => {\r\n      const currentTodo = state.find((todo) => {\r\n        return todo.id == action.payload;\r\n      });\r\n      currentTodo.completed = !currentTodo.completed;\r\n    },\r\n  },\r\n});\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const todoListSelector = (state) => state.todoList;\r\nexport const filtersSearchSelector = (state) => state.filters.search;\r\nexport const filtersStatusSelector = (state) => state.filters.status;\r\nexport const filtersPrioritiesSelector = (state) => state.filters.priorities;\r\n\r\nexport const todoListRemaining = createSelector(\r\n  todoListSelector,\r\n  filtersSearchSelector,\r\n  filtersStatusSelector,\r\n  filtersPrioritiesSelector,\r\n  (todoList, search, status, priorities) => {\r\n    return todoList.filter((todo) => {\r\n      if (status === \"All\" || status === \"\") {\r\n        return priorities.length\r\n          ? todo.name.includes(search) && priorities.includes(todo.priority)\r\n          : todo.name.includes(search);\r\n      }\r\n      return (\r\n        (priorities.length\r\n          ? todo.name.includes(search) && priorities.includes(todo.priority)\r\n          : todo.name.includes(search)) &&\r\n        (status === \"Completed\" ? todo.completed : !todo.completed)\r\n      );\r\n    });\r\n  }\r\n);\r\n","import { Col, Row, Input, Button, Select, Tag } from \"antd\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Todo from \"../Todo\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport todoListSlice from \"./todoListSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { todoListRemaining } from \"../../redux/selectors\";\r\n\r\nexport default function TodoList() {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"Medium\");\r\n  const dispatch = useDispatch();\r\n\r\n  const todoList = useSelector(todoListRemaining);\r\n\r\n  const handleAddTodo = () => {\r\n    const todoItem = {\r\n      id: uuidv4(),\r\n      name: todo,\r\n      priority: priority,\r\n      completed: false,\r\n    };\r\n    dispatch(todoListSlice.actions.addTodo(todoItem));\r\n    setTodo(\"\");\r\n    setPriority(\"Medium\");\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: \"calc(100% - 40px)\" }}>\r\n      <Col span={24} style={{ height: \"calc(100% - 40px)\", overflowY: \"auto\" }}>\r\n        {todoList.map((todo) => {\r\n          return (\r\n            <Todo\r\n              key={todo.id}\r\n              name={todo.name}\r\n              priority={todo.priority}\r\n              completed={todo.completed}\r\n            />\r\n          );\r\n        })}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: \"flex\" }} compact>\r\n          <Input value={todo} onChange={(e) => setTodo(e.target.value)} />\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            value={priority}\r\n            onChange={(e) => setPriority(e)}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleAddTodo}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport default createSlice({\r\n  name: \"filters\",\r\n  initialState: {\r\n    search: \"\",\r\n    status: \"\",\r\n    priorities: [],\r\n  },\r\n  reducers: {\r\n    searchFilter: (state, action) => {\r\n      state.search = action.payload;\r\n    },\r\n    statusFilter: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    prioritiesFilter: (state, action) => {\r\n      state.priorities = action.payload;\r\n    },\r\n  },\r\n});\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport filtersSlice from \"./filtersSlice\";\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState(\"All\");\r\n  const [priorities, setPriorities] = useState();\r\n\r\n  const handleChangeSearch = (e) => {\r\n    dispatch(filtersSlice.actions.searchFilter(e.target.value));\r\n  };\r\n\r\n  const handleChangeStatus = (e) => {\r\n    setStatus(e.target.value);\r\n    dispatch(filtersSlice.actions.statusFilter(e.target.value));\r\n  };\r\n\r\n  const handleChangePriorities = (e) => {\r\n    setPriorities(e);\r\n    dispatch(filtersSlice.actions.prioritiesFilter(e));\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onChange={(e) => handleChangeSearch(e)}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={status} onChange={(e) => handleChangeStatus(e)}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please select\"\r\n          style={{ width: \"100%\" }}\r\n          value={priorities}\r\n          onChange={(e) => handleChangePriorities(e)}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from \"antd\";\r\nimport \"./App.css\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport Filters from \"./components/Filters\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 500,\r\n        margin: \"0 auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"white\",\r\n        padding: 20,\r\n        boxShadow: \"0 0 10px 4px #bfbfbf\",\r\n        borderRadius: 5,\r\n        height: \"90vh\",\r\n      }}\r\n    >\r\n      <Title style={{ textAlign: \"center\" }}></Title>\r\n      <Filters />\r\n      <Divider />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport filtersSlice from \"../components/Filters/filtersSlice\";\r\nimport todoListSlice from \"../components/TodoList/todoListSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filters: filtersSlice.reducer,\r\n    todoList: todoListSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}